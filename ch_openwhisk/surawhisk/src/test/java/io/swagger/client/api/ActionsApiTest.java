/*
 * OpenWhisk REST API
 * API for OpenWhisk
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Action;
import io.swagger.client.model.ActionPut;
import io.swagger.client.model.Activation;
import io.swagger.client.model.EntityBrief;
import io.swagger.client.model.ErrorMessage;
import io.swagger.client.model.ItemId;
import io.swagger.client.model.KeyValue;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ActionsApi
 */
@Ignore
public class ActionsApiTest {

    private final ActionsApi api = new ActionsApi();

    
    /**
     * Delete an action
     *
     * Delete an action
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteActionTest() throws ApiException {
        String namespace = null;
        String actionName = null;
        api.deleteAction(namespace, actionName);

        // TODO: test validations
    }
    
    /**
     * Get action information
     *
     * Get action information.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getActionByNameTest() throws ApiException {
        String namespace = null;
        String actionName = null;
        Action response = api.getActionByName(namespace, actionName);

        // TODO: test validations
    }
    
    /**
     * Get all actions
     *
     * Get all actions
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllActionsTest() throws ApiException {
        String namespace = null;
        Integer limit = null;
        Integer skip = null;
        List<EntityBrief> response = api.getAllActions(namespace, limit, skip);

        // TODO: test validations
    }
    
    /**
     * Invoke an action
     *
     * Invoke an action
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invokeActionTest() throws ApiException {
        String namespace = null;
        String actionName = null;
        KeyValue payload = null;
        String blocking = null;
        String result = null;
        Integer timeout = null;
        Activation response = api.invokeAction(namespace, actionName, payload, blocking, result, timeout);

        // TODO: test validations
    }
    
    /**
     * Create or update an action
     *
     * Create or update an action
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateActionTest() throws ApiException {
        String namespace = null;
        String actionName = null;
        ActionPut action = null;
        String overwrite = null;
        ItemId response = api.updateAction(namespace, actionName, action, overwrite);

        // TODO: test validations
    }
    
}
