---

# Download the cli to Nginx CLI directory and unzip them

- name: "set the basic variables os, arc and suffix"
  set_fact:
    os="{{ item[0] }}"
    arc="{{ item[1] }}"
    suffix="zip"

- name: "change the suffix to tgz if the operating system is Linux"
  set_fact:
    suffix="tgz"
  when: os == "linux"

- name: "set the file name to download"
  set_fact:
    source_name="{{ openwhisk_cli.remote.name }}-{{ openwhisk_cli_tag }}-{{ os }}-{{ arc }}.{{ suffix }}"

- name: "set the destination file name locally after download for 32 bit"
  set_fact:
    dest_name="{{ openwhisk_cli.remote.dest_name }}-{{ os }}-32bit.{{ suffix }}"
  when: arc == "386"

- name: "set the destination file name locally after download for 64 bit"
  set_fact:
    dest_name="{{ openwhisk_cli.remote.dest_name }}-{{ os }}.{{ suffix }}"
  when: arc == "amd64"

- name: "set the http header used to download the binary packages"
  set_fact:
    headers="{{ openwhisk_cli.remote.headers }}"
  when: openwhisk_cli.remote.headers is defined

- name: "set the http header to empty"
  set_fact:
    headers=""
  when: openwhisk_cli.remote.headers is not defined

- name: "set the volume_dir"
  vars:
    instance: "{{instances | selectattr('name', 'equalto', 'db') | list | first}}"
  set_fact:
    volume_dir: "{{ instance.volume.fsmount | default( '/mnt/' + group_names|first, true ) }}:/usr/local/var/lib/couchdb"
  when: (block_device is defined) and (block_device in disk_status.stdout)

- name: "ensure Nginx cli directory for ({{ os }}) {{ arc }} exists"
  file:
    path: "{{ cli.nginxdir }}/{{ os }}/{{ arc }}"
    state: directory
    mode: 0777
  become: "{{ cli.dir.become }}"

- name: "download cli ({{ os }}) {{ arc }} to Nginx directory"
  get_url:
    url: "{{ openwhisk_cli.remote.location }}/{{ source_name }}"
    dest: "{{ cli.nginxdir }}/{{ os }}/{{ arc }}/{{ dest_name }}"
    headers: "{{ headers }}"
    mode: 0755

- name: "unarchive cli for Mac and Windows"
  unarchive:
    src: "{{ cli.nginxdir }}/{{ os }}/{{ arc }}/{{ dest_name }}"
    dest: "{{ cli.nginxdir }}/{{ os }}/{{ arc }}/"
    remote_src: True
  when: os != "linux"

- name: "unarchive cli for Linux"
  command: tar -zxvf {{ dest_name }}
  args:
    chdir: "{{ cli.nginxdir }}/{{ os }}/{{ arc }}/"
  when: os == "linux"

