version: "3.3"
services:
  faas-swarm:
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    ports:
      - 8081:8080
    image:  functions/faas-swarm:0.1.2
    networks:
      - functions

  gateway:
    ports:
      - 8080:8080
    image: functions/gateway:0.6.15
    networks:
      - functions
    environment:
      read_timeout: 10    # set both here, and on your functions
      write_timeout: 10   # set both here, and on your functions
      dnsrr: "false"  # Temporarily use dnsrr in place of VIP while issue persists on PWD
      functions_provider_url: "http://faas-swarm:8080/"
    deploy:
      resources:
        limits:
          memory: 100M
        reservations:
          memory: 50M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 20
        window: 380s
      placement:
        constraints:
          - 'node.role == manager'
          - 'node.platform.os == linux'
  # End

  nats:
    image: nats-streaming:0.6.0
    # Uncomment the following port mappings if you wish to expose the
    # NATS client and/or management ports
    # ports:
    #     - 4222:4222
    #     - 8222:8222
    command: "--store memory --cluster_id faas-cluster"
    networks:
      - functions
    deploy:
      resources:
        limits:
          memory: 125M
        reservations:
          memory: 50M
      placement:
        constraints:
          - 'node.platform.os == linux'

  queue-worker:
    image: functions/queue-worker:0.4
    networks:
      - functions
    environment:
      max_inflight: "1"
      ack_timeout: "30s"    # Max duration of any async task / request
    deploy:
      resources:
        limits:
          memory: 50M
        reservations:
          memory: 20M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 20
        window: 380s
      placement:
        constraints:
          - 'node.platform.os == linux'

  # End

  # Start monitoring

  prometheus:
    image: functions/prometheus:latest  # autobuild from Dockerfile in repo.
    command: "-config.file=/etc/prometheus/prometheus.yml -storage.local.path=/prometheus -storage.local.memory-chunks=10000 --alertmanager.url=http://alertmanager:9093"
    ports:
      - 9090:9090
    environment:
      no_proxy: "gateway"
    networks:
      - functions
    deploy:
      resources:
        limits:
          memory: 500M
        reservations:
          memory: 200M
      placement:
        constraints:
          - 'node.role == manager'
          - 'node.platform.os == linux'

  alertmanager:
    image: functions/alertmanager:latest    # autobuild from Dockerfile in repo.
    environment:
      no_proxy: "gateway"
    command:
      - '-config.file=/alertmanager.yml'
    networks:
      - functions
    # Uncomment the following port mapping if you wish to expose the Prometheus
    #Â Alertmanager UI.
    # ports:
    #     - 9093:9093
    deploy:
      resources:
        limits:
          memory: 50M
        reservations:
          memory: 20M
      placement:
        constraints:
          - 'node.role == manager'
          - 'node.platform.os == linux'

  # Sample functions go here.

  # Pass a username as an argument to find how many images user has pushed to Docker Hub.
  hubstats:
    image: functions/hubstats:latest
    labels:
      function: "true"
    networks:
      - functions
    environment:
      no_proxy: "gateway"
      https_proxy: $https_proxy
    deploy:
      resources:
        limits:
          memory: 50M
        reservations:
          memory: 20M
      placement:
        constraints:
          - 'node.platform.os == linux'

networks:
  functions:
    driver: weaveworks/net-plugin:2.1.3
    attachable: true
